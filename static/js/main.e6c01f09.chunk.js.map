{"version":3,"sources":["components/TodoContext/index.jsx","components/TodoContext/useLocalStorage.jsx","components/TodoCounter/index.jsx","components/TodoItem/index.jsx","components/TodoList/index.jsx","components/TodoSearch/index.jsx","components/CreateTodoButton/AppUI.jsx","components/CreateTodoButton/index.jsx","components/Modal/index.jsx","components/TodoForm/index.jsx","App/AppUI.jsx","App/index.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","setTimeout","parsedItems","localStorageTodos","localStorage","getItem","JSON","parse","stringify","err","saveItem","newTodos","useLocalStorage","todoList","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","todoFilteredList","length","filter","todo","text","toLowerCase","includes","Provider","value","addTodo","newTodosList","push","id","completed","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","count","setCount","useEffect","tempCount","forEach","className","TodoItem","type","name","onClick","onComplete","onDelete","TodoList","TodoSearch","placeholder","onChange","e","target","AppUI","onClickButton","CreateTodoButton","msg","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","taskDescription","setTaskDescription","onSubmit","preventDefault","cols","rows","map","App","render","StrictMode"],"mappings":"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","file":"static/js/main.e6c01f09.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = createContext();\n\nfunction TodoProvider(props) {\n  const {\n    item: todoList,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"TODOS_V1\", []);\n  // const [todoFilteredList, setTodoFilteredList] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n\n  let todoFilteredList = [];\n  if (searchValue.length) {\n    const newTodosList = todoList.filter((todo) =>\n      todo.text.toLowerCase().includes(searchValue.toLowerCase())\n    );\n    // setTodoFilteredList(newTodosList);\n    todoFilteredList = newTodosList;\n  } else {\n    // setTodoFilteredList(todoList);\n    todoFilteredList = todoList;\n  }\n\n  const addTodo = (text) => {\n    const newTodosList = [...todoList];\n    newTodosList.push({\n      id: todoList[todoList?.length - 1]?.id + 1,\n      completed: false,\n      text: text,\n    });\n    saveTodos(newTodosList);\n  };\n\n  const completeTodo = (id) => {\n    const todoIndex = todoList.findIndex((todo) => todo.id === id);\n    const newTodosList = [...todoList];\n    newTodosList[todoIndex].completed = true;\n    saveTodos(newTodosList);\n  };\n\n  const deleteTodo = (id) => {\n    const todoIndex = todoList.findIndex((todo) => todo.id === id);\n    const newTodosList = [...todoList];\n    newTodosList.splice(todoIndex, 1);\n    saveTodos(newTodosList);\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        error,\n        loading,\n        todoList,\n        todoFilteredList,\n        addTodo,\n        completeTodo,\n        deleteTodo,\n        searchValue,\n        setSearchValue,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n","import React, { useState } from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [item, setItem] = useState(initialValue);\n\n  setTimeout(() => {\n    try {\n      const localStorageTodos = localStorage.getItem(itemName);\n      let parsedItems;\n      if (!localStorageTodos) {\n        localStorage.setItem(itemName, JSON.stringify(initialValue));\n        parsedItems = [];\n      } else {\n        parsedItems = JSON.parse(localStorageTodos);\n      }\n      setItem(parsedItems);\n      setLoading(false);\n    } catch (err) {\n      setError(err);\n    }\n  }, 500);\n\n  const saveItem = (newTodos) => {\n    try {\n      localStorage.setItem(itemName, JSON.stringify(newTodos));\n      setItem(newTodos);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  return { item, saveItem, loading, error };\n}\n\nexport { useLocalStorage };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoCounter.css\";\n\nexport function TodoCounter() {\n  const { todoList } = useContext(TodoContext);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    let tempCount = 0;\n    todoList.forEach((todo) => {\n      if (todo.completed) tempCount++;\n    });\n    setCount(tempCount);\n  }, [todoList]);\n\n  return (\n    <>\n      <h1 className=\"TodoCounter-title\">TODO's ListðŸ—’</h1>\n      <h2 className=\"TodoCounter-subtitle\">\n        You have completed {count} of {todoList.length} tasks\n      </h2>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./TodoItem.css\";\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && \"Icon-check--active\"}`}\n      >\n        {props.completed ? (\n          \"âœ…\"\n        ) : (\n          <input\n            type=\"checkbox\"\n            name=\"task\"\n            id=\"task\"\n            onClick={() => props.onComplete()}\n          />\n        )}\n      </span>\n\n      <p className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}>\n        {props.text}\n      </p>\n      <span className=\"Icon Icon-delete\" onClick={() => props.onDelete()}>\n        ðŸ—‘\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from \"react\";\nimport \"./TodoList.css\";\n\nfunction TodoList(props) {\n  return (\n    <section className=\"todo-list-container\">\n      <ul>{props.children}</ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoSearch.css\";\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = useContext(TodoContext);\n\n  const onSearchValueChange = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Search task\"\n      onChange={onSearchValueChange}\n      value={searchValue}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import React from \"react\";\nimport \"./CreateTodoButton.css\";\n\nfunction AppUI({ onClickButton, openModal }) {\n  return (\n    <div\n      className=\"CreateTodoContainer\"\n      onClick={() => onClickButton(\"Here should open a modal!\")}\n    >\n      <button className={openModal ? \"ButtonModalOpen\" : \"\"}>âœš</button>\n    </div>\n  );\n}\n\nexport { AppUI };\n","import React from \"react\";\nimport { AppUI } from \"./AppUI\";\n\nfunction CreateTodoButton(props) {\n  const onClickButton = (msg) => {\n    props.setOpenModal((prevState) => !prevState);\n  };\n  return <AppUI onClickButton={onClickButton} openModal={props.openModal} />;\n}\n\nexport { CreateTodoButton };\n","import React, { useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">{children}</div>,\n    document.getElementById(\"modal\")\n  );\n}\nexport { Modal };\n","import { useContext, useState } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoForm.css\";\n\nfunction TodoForm(props) {\n  const { addTodo } = useContext(TodoContext);\n  const [taskDescription, setTaskDescription] = useState(\"\");\n\n  const onChange = (e) => setTaskDescription(e.target.value);\n\n  const onCancel = () => {\n    setTaskDescription(\"\");\n    props.setOpenModal((prevState) => !prevState);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addTodo(taskDescription);\n    props.setOpenModal((prevState) => !prevState);\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"TodoForm-form\">\n      <label>New Task</label>\n      <textarea\n        onChange={onChange}\n        placeholder=\"Description of the task\"\n        name=\"\"\n        id=\"\"\n        cols=\"30\"\n        rows=\"10\"\n      ></textarea>\n      <div className=\"TodoForm-button-container\">\n        <button onClick={onCancel} type=\"button\">\n          Cancel\n        </button>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import \"./App.css\";\nimport { useContext } from \"react\";\nimport { TodoContext } from \"../components/TodoContext\";\nimport { TodoCounter } from \"../components/TodoCounter/index\";\nimport { TodoItem } from \"../components/TodoItem/index\";\nimport { TodoList } from \"../components/TodoList/index\";\nimport { TodoSearch } from \"../components/TodoSearch/index\";\nimport { CreateTodoButton } from \"../components/CreateTodoButton/index\";\nimport { Modal } from \"../components/Modal\";\nimport { TodoForm } from \"../components/TodoForm\";\n\nfunction AppUI() {\n  const {\n    todoFilteredList,\n    completeTodo,\n    deleteTodo,\n    loading,\n    error,\n    todoList,\n    searchValue,\n    setSearchValue,\n    openModal,\n    setOpenModal,\n  } = useContext(TodoContext);\n  return (\n    <div className=\"App\">\n      <div className=\"app-container\">\n        <TodoCounter />\n        <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n        <TodoList>\n          {todoFilteredList?.map((todo) => (\n            <TodoItem\n              key={todo.text}\n              text={todo.text}\n              completed={todo.completed}\n              onComplete={() => completeTodo(todo.id)}\n              onDelete={() => deleteTodo(todo.id)}\n            />\n          ))}\n          {todoFilteredList?.length\n            ? null\n            : !loading && <h3 className=\"message\">No tasks</h3>}\n          {loading ? <h3 className=\"message\">Loading</h3> : null}\n          {error ? <h3 className=\"message\">{error}</h3> : null}\n        </TodoList>\n        {!!openModal && (\n          <Modal>\n            <TodoForm setOpenModal={setOpenModal} />\n          </Modal>\n        )}\n\n        <CreateTodoButton setOpenModal={setOpenModal} openModal={openModal} />\n      </div>\n    </div>\n  );\n}\n\nexport { AppUI };\n","import { useState, useEffect } from \"react\";\nimport { AppUI } from \"./AppUI\";\nimport { TodoProvider } from \"../components/TodoContext\";\n\n// const todos = [\n// { id: 1, text: \"Tarea 1\", completed: true },\n// { id: 2, text: \"Tarea 2\", completed: false },\n// { id: 3, text: \"Tarea 3\", completed: false },\n// { id: 4, text: \"Tarea 4\", completed: false },\n// ];\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// ReactDOM.createPortal(<App />, document.getElementById(\"modal\"));\n"],"sourceRoot":""}