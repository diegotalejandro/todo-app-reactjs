{"version":3,"sources":["components/TodoContext/index.jsx","components/TodoContext/useLocalStorage.jsx","components/TodoCounter/index.jsx","components/TodoIcon/index.jsx","components/TodoIcon/CompleteIcon.jsx","components/TodoIcon/DeleteIcon.jsx","components/TodoItem/index.jsx","components/TodoList/index.jsx","components/TodoSearch/index.jsx","components/CreateTodoButton/AppUI.jsx","components/CreateTodoButton/index.jsx","components/Modal/index.jsx","components/TodoForm/index.jsx","components/TodoLoading/index.jsx","components/TodoError/index.jsx","components/TodoEmpty/index.jsx","App/AppUI.jsx","App/index.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","setTimeout","parsedItems","localStorageTodos","localStorage","getItem","JSON","parse","stringify","err","saveItem","newTodos","useLocalStorage","todoList","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","todoFilteredList","length","filter","todo","text","toLowerCase","includes","Provider","value","addTodo","newTodosList","push","id","completed","completeTodo","todoIndex","findIndex","notCompleteTodo","deleteTodo","splice","children","TodoCounter","useContext","count","setCount","useEffect","tempCount","forEach","className","iconTypes","check","color","fill","delete","TodoIcon","type","onClick","CompleteIcon","onComplete","onNotComplete","DeleteIcon","onDelete","TodoItem","TodoList","TodoSearch","placeholder","onChange","e","target","AppUI","onClickButton","fixed","CreateTodoButton","msg","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","taskDescription","setTaskDescription","onSubmit","preventDefault","name","cols","rows","TodoLoading","TodoError","TodoEmpty","map","Array","a","i","App","render","StrictMode"],"mappings":"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","file":"static/js/main.12f558d5.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = createContext();\n\nfunction TodoProvider(props) {\n  const {\n    item: todoList,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"TODOS_V1\", []);\n  // const [todoFilteredList, setTodoFilteredList] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n\n  let todoFilteredList = [];\n  if (searchValue.length) {\n    const newTodosList = todoList.filter((todo) =>\n      todo.text.toLowerCase().includes(searchValue.toLowerCase())\n    );\n    // setTodoFilteredList(newTodosList);\n    todoFilteredList = newTodosList;\n  } else {\n    // setTodoFilteredList(todoList);\n    todoFilteredList = todoList;\n  }\n\n  const addTodo = (text) => {\n    const newTodosList = [...todoList];\n    newTodosList.push({\n      id: todoList[todoList?.length - 1]?.id + 1,\n      completed: false,\n      text: text,\n    });\n    saveTodos(newTodosList);\n  };\n\n  const completeTodo = (id) => {\n    const todoIndex = todoList.findIndex((todo) => todo.id === id);\n    const newTodosList = [...todoList];\n    newTodosList[todoIndex].completed = true;\n    saveTodos(newTodosList);\n  };\n\n  const notCompleteTodo = (id) => {\n    const todoIndex = todoList.findIndex((todo) => todo.id === id);\n    const newTodosList = [...todoList];\n    newTodosList[todoIndex].completed = false;\n    saveTodos(newTodosList);\n  };\n\n  const deleteTodo = (id) => {\n    const todoIndex = todoList.findIndex((todo) => todo.id === id);\n    const newTodosList = [...todoList];\n    newTodosList.splice(todoIndex, 1);\n    saveTodos(newTodosList);\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        error,\n        loading,\n        todoList,\n        todoFilteredList,\n        addTodo,\n        completeTodo,\n        notCompleteTodo,\n        deleteTodo,\n        searchValue,\n        setSearchValue,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n","import React, { useState } from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [item, setItem] = useState(initialValue);\n\n  setTimeout(() => {\n    try {\n      const localStorageTodos = localStorage.getItem(itemName);\n      let parsedItems;\n      if (!localStorageTodos) {\n        localStorage.setItem(itemName, JSON.stringify(initialValue));\n        parsedItems = [];\n      } else {\n        parsedItems = JSON.parse(localStorageTodos);\n      }\n      setItem(parsedItems);\n      setLoading(false);\n    } catch (err) {\n      setError(err);\n    }\n  }, 500);\n\n  const saveItem = (newTodos) => {\n    try {\n      localStorage.setItem(itemName, JSON.stringify(newTodos));\n      setItem(newTodos);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  return { item, saveItem, loading, error };\n}\n\nexport { useLocalStorage };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoCounter.css\";\n\nexport function TodoCounter() {\n  const { todoList } = useContext(TodoContext);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    let tempCount = 0;\n    todoList.forEach((todo) => {\n      if (todo.completed) tempCount++;\n    });\n    setCount(tempCount);\n  }, [todoList]);\n\n  return (\n    <>\n      <h1 className=\"TodoCounter-title\">TODO's List🗒</h1>\n      <h2 className=\"TodoCounter-subtitle\">\n        You have completed {count} of {todoList.length} tasks\n      </h2>\n    </>\n  );\n}\n","import { VscTrash, VscCheck } from \"react-icons/vsc\";\nimport \"./TodoIcon.css\";\n\nconst iconTypes = {\n  check: (color, completed) => (\n    <VscCheck\n      className={`TodoIcon-SVG ${\n        completed\n          ? \"Icon-SVG--check--completed\"\n          : \"Icon-SVG--check--notCompleted\"\n      }`}\n      fill={color}\n    />\n  ),\n  delete: (color) => (\n    // <VscTrash className=\"TodoIcon-SVG Icon-SVG--delete\" fill={color} />\n    <span className=\"TodoIcon-SVG Icon-SVG--delete\">🗑</span>\n  ),\n};\n\nfunction TodoIcon({ type, color = \"gray\", completed = false, onClick }) {\n  return (\n    <span className={`TodoIcon-container TodoIcon--${type}`} onClick={onClick}>\n      {iconTypes[type](color, completed)}\n    </span>\n  );\n}\n\nexport { TodoIcon };\n","import { TodoIcon } from \".\";\n\nfunction CompleteIcon({ completed, onComplete, onNotComplete }) {\n  return (\n    <>\n      <TodoIcon\n        type=\"check\"\n        color={completed ? \"#4caf50\" : \"gray\"}\n        completed={completed}\n        onClick={completed ? onNotComplete : onComplete}\n      />\n    </>\n  );\n}\n\nexport { CompleteIcon };\n","import { TodoIcon } from \".\";\n\nfunction DeleteIcon({ onDelete }) {\n  return <TodoIcon type=\"delete\" onClick={onDelete} />;\n}\n\nexport { DeleteIcon };\n","import React from \"react\";\nimport { CompleteIcon } from \"../TodoIcon/CompleteIcon\";\nimport { DeleteIcon } from \"../TodoIcon/DeleteIcon\";\nimport \"./TodoItem.css\";\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"TodoItem\">\n      {/* <span\n        className={`Icon Icon-check ${props.completed && \"Icon-check--active\"}`}\n      >\n        {props.completed ? (\n          \"✅\"\n        ) : (\n          <input\n            type=\"checkbox\"\n            name=\"task\"\n            id=\"task\"\n            onClick={() => props.onComplete()}\n          />\n        )}\n      </span> */}\n      <CompleteIcon\n        completed={props.completed}\n        onComplete={props.onComplete}\n        onNotComplete={props.onNotComplete}\n      />\n\n      <p className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}>\n        {props.text}\n      </p>\n      {/* <span className=\"Icon Icon-delete\" onClick={() => props.onDelete()}>\n        🗑\n      </span> */}\n      <DeleteIcon onDelete={props.onDelete} />\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from \"react\";\nimport \"./TodoList.css\";\n\nfunction TodoList(props) {\n  return (\n    <section className=\"todo-list-container\">\n      <ul>{props.children}</ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoSearch.css\";\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = useContext(TodoContext);\n\n  const onSearchValueChange = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Search task\"\n      onChange={onSearchValueChange}\n      value={searchValue}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import React from \"react\";\nimport \"./CreateTodoButton.css\";\n\nfunction AppUI({ onClickButton, openModal, fixed }) {\n  return (\n    <div\n      className={fixed ? \"CreateTodoContainer fixed\" : \"CreateTodoContainer\"}\n      onClick={() => onClickButton(\"Here should open a modal!\")}\n    >\n      <button className={openModal ? \"ButtonModalOpen\" : \"\"}>✚</button>\n    </div>\n  );\n}\n\nexport { AppUI };\n","import React from \"react\";\nimport { AppUI } from \"./AppUI\";\n\nfunction CreateTodoButton(props) {\n  const onClickButton = (msg) => {\n    props.setOpenModal((prevState) => !prevState);\n  };\n  return (\n    <AppUI\n      onClickButton={onClickButton}\n      openModal={props.openModal}\n      fixed={props.fixed}\n    />\n  );\n}\n\nexport { CreateTodoButton };\n","import React, { useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">{children}</div>,\n    document.getElementById(\"modal\")\n  );\n}\nexport { Modal };\n","import { useContext, useState } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoForm.css\";\n\nfunction TodoForm(props) {\n  const { addTodo } = useContext(TodoContext);\n  const [taskDescription, setTaskDescription] = useState(\"\");\n\n  const onChange = (e) => setTaskDescription(e.target.value);\n\n  const onCancel = () => {\n    setTaskDescription(\"\");\n    props.setOpenModal((prevState) => !prevState);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addTodo(taskDescription);\n    props.setOpenModal((prevState) => !prevState);\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"TodoForm-form\">\n      <label>New Task</label>\n      <textarea\n        onChange={onChange}\n        placeholder=\"Description of the task\"\n        name=\"\"\n        id=\"\"\n        cols=\"30\"\n        rows=\"10\"\n      ></textarea>\n      <div className=\"TodoForm-button-container\">\n        <button onClick={onCancel} type=\"button\">\n          Cancel\n        </button>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import { CompleteIcon } from \"../TodoIcon/CompleteIcon\";\nimport \"./TodoLoading.css\";\n\nfunction TodoLoading() {\n  return (\n    <div className=\"LoadingTodo-container\">\n      {/* <span className=\"LoadingTodo-completeIcon\">\n        <input type=\"checkbox\" />\n      </span> */}\n      <CompleteIcon />\n      <p className=\"LoadingTodo-text\">...</p>\n      <span className=\"LoadingTodo-deleteIcon\">🗑</span>\n    </div>\n  );\n}\nexport { TodoLoading };\n","function TodoError({ error }) {\n  return <p>Error</p>;\n}\n\nexport { TodoError };\n","import { VscSearchStop, VscAdd } from \"react-icons/vsc\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport \"./TodoEmpty.css\";\n\nfunction TodoEmpty({ searchValue, setOpenModal, openModal }) {\n  return (\n    <div className=\"TodoEmpty-container\">\n      {searchValue ? (\n        <>\n          <VscSearchStop className=\"TodoEmpty-SVG\" />\n          <p className=\"TodoEmpty-text\">Tasks not found</p>\n        </>\n      ) : (\n        <>\n          {/* <VscAdd className=\"TodoEmpty-SVG\" /> */}\n          <CreateTodoButton\n            setOpenModal={setOpenModal}\n            openModal={openModal}\n            fixed={false}\n          />\n          <p className=\"TodoEmpty-text\">Add a new task</p>\n        </>\n      )}\n    </div>\n  );\n}\nexport { TodoEmpty };\n","import \"./App.css\";\nimport { useContext } from \"react\";\nimport { TodoContext } from \"../components/TodoContext\";\nimport { TodoCounter } from \"../components/TodoCounter/index\";\nimport { TodoItem } from \"../components/TodoItem/index\";\nimport { TodoList } from \"../components/TodoList/index\";\nimport { TodoSearch } from \"../components/TodoSearch/index\";\nimport { CreateTodoButton } from \"../components/CreateTodoButton/index\";\nimport { Modal } from \"../components/Modal\";\nimport { TodoForm } from \"../components/TodoForm\";\nimport { TodoLoading } from \"../components/TodoLoading\";\nimport { TodoError } from \"../components/TodoError\";\nimport { TodoEmpty } from \"../components/TodoEmpty\";\n\nfunction AppUI() {\n  const {\n    todoFilteredList,\n    completeTodo,\n    notCompleteTodo,\n    deleteTodo,\n    loading,\n    error,\n    todoList,\n    searchValue,\n    setSearchValue,\n    openModal,\n    setOpenModal,\n  } = useContext(TodoContext);\n  return (\n    <div className=\"App\">\n      <div className=\"app-container\">\n        <TodoCounter />\n        <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n        <TodoList>\n          {todoFilteredList?.map((todo) => (\n            <TodoItem\n              key={todo.text}\n              text={todo.text}\n              completed={todo.completed}\n              onComplete={() => completeTodo(todo.id)}\n              onNotComplete={() => notCompleteTodo(todo.id)}\n              onDelete={() => deleteTodo(todo.id)}\n            />\n          ))}\n          {todoFilteredList?.length\n            ? null\n            : !loading && (\n                <TodoEmpty\n                  searchValue={searchValue ? true : false}\n                  setOpenModal={setOpenModal}\n                  openModal={openModal}\n                />\n              )}\n\n          {loading\n            ? new Array(5).fill(1).map((a, i) => <TodoLoading key={i} />)\n            : null}\n          {error ? <TodoError error={error} /> : null}\n        </TodoList>\n        {!!openModal && (\n          <Modal>\n            <TodoForm setOpenModal={setOpenModal} />\n          </Modal>\n        )}\n\n        <CreateTodoButton\n          setOpenModal={setOpenModal}\n          openModal={openModal}\n          fixed={true}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport { AppUI };\n","import { useState, useEffect } from \"react\";\nimport { AppUI } from \"./AppUI\";\nimport { TodoProvider } from \"../components/TodoContext\";\n\n// const todos = [\n// { id: 1, text: \"Tarea 1\", completed: true },\n// { id: 2, text: \"Tarea 2\", completed: false },\n// { id: 3, text: \"Tarea 3\", completed: false },\n// { id: 4, text: \"Tarea 4\", completed: false },\n// ];\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// ReactDOM.createPortal(<App />, document.getElementById(\"modal\"));\n"],"sourceRoot":""}